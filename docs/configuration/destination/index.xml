<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Destination on Gickup Docs</title>
    <link>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/</link>
    <description>Recent content in Destination on Gickup Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gitea</title>
      <link>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/gitea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/gitea/</guid>
      <description>1 gitea: 2 - token: some-token 3 token_file: token.txt 4 user: some-name 5 url: http(s)://url-to-gitea 6 createorg: true 7 visibility: 8 repositories: private 9 organizations: private token: your gitea token. token_file: alternatively, specify the token in a file, relative to current working directory when executed. url: if empty, https://gitea.com is used. user: the user/org you want to mirror the repositories to. createorg: if activated, it will create the value in user as organization if it doesn&#39;t exist on the system.</description>
    </item>
    
    <item>
      <title>Gogs</title>
      <link>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/gogs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/gogs/</guid>
      <description>1 gogs: 2 - token: some-token 3 token_file: token.txt 4 user: some-name 5 url: http(s)://url-to-gogs 6 createorg: true 7 visibility: 8 repositories: private token: your gogs token. token_file: alternatively, specify the token in a file, relative to current working directory when executed. url: there is no default value. user: the user/org you want to mirror the repositories to. createorg: if activated, it will create the value in user as organization if it doesn&#39;t exist on the system.</description>
    </item>
    
    <item>
      <title>Gitlab</title>
      <link>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/gitlab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/gitlab/</guid>
      <description>1 gitlab: 2 - token: some-token 3 token_file: token.txt 4 url: http(s)://url-to-gitlab token: your gitlab token. token_file: alternatively, specify the token in a file, relative to current working directory when executed. url: if empty, https://gitlab.com is used. A backup to Gitlab works in general. With the community edition, it just migrates the repository to Gitlab. Mirroring is only supported in the Enterprise Edition. I have no access to an Enterprise Edition, therefore I can&#39;t test it properly.</description>
    </item>
    
    <item>
      <title>Github</title>
      <link>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/github/</guid>
      <description>1 github: 2 - token: some-token 3 token_file: token.txt 4 organization: myorg 5 visibility: 6 repositories: private token: your github token. token_file: alternatively, specify the token in a file, relative to current working directory when executed. visibility: set the visibility of created organizations and repositories. repositories: can be private or public, default is private. organization: name of the organization you want to backup to. </description>
    </item>
    
    <item>
      <title>Sourcehut</title>
      <link>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/sourcehut/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/sourcehut/</guid>
      <description>1 sourcehut: 2 - token: some-token 3 token_file: token.txt 4 url: http(s)://url-to-sourcehut 5 sshkey: /path/to/key 6 visibility: 7 repositories: private token: your github token. token_file: alternatively, specify the token in a file, relative to current working directory when executed. url: if empty, https://git.sr.ht is used. Sourcehut uses SSH to manage write access for repositories, so you need to employ an SSH key to mirror a repository. sshkey: if empty, it uses your home directories&#39; .</description>
    </item>
    
    <item>
      <title>Onedev</title>
      <link>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/onedev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/onedev/</guid>
      <description>1 onedev: 2 - token: some-token 3 token_file: token.txt 4 url: http(s)://url-to-onedev 5 organization: myorg token: your onedev token. token_file: alternatively, specify the token in a file, relative to current working directory when executed. url: if empty, https://code.onedev.io is used. organization: name of the parent repository you want to backup to. </description>
    </item>
    
    <item>
      <title>Local</title>
      <link>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/local/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cooperspencer.github.io/gickup-documentation/docs/configuration/destination/local/</guid>
      <description>1 local: 2 - path: /some/path/gickup 3 structured: true 4 zip: true 5 keep: 5 6 bare: true path: path to store your backup If you use Docker, don&#39;t forget to mount the path of your backup! structured: if set to true, it checks out the repos in a more structured way, like hoster/user|organization/repository zip: zips the repository keep: keeps x latest backups bare: clones it as bare </description>
    </item>
    
  </channel>
</rss>
