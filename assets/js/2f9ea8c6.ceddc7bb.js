"use strict";(self.webpackChunkgickup_docusaurus=self.webpackChunkgickup_docusaurus||[]).push([[3409],{8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var t=o(6540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},8638:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"configuration/source_docu/any","title":"Any","description":"- token: Token of the hoster. It can also be an environment variable.","source":"@site/docs/configuration/source_docu/any.md","sourceDirName":"configuration/source_docu","slug":"/configuration/source_docu/any","permalink":"/gickup-documentation/configuration/source_docu/any","draft":false,"unlisted":false,"editUrl":"https://github.com/cooperspencer/gickup-documentation/blob/main/docs/docs/configuration/source_docu/any.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Bitbucket","permalink":"/gickup-documentation/configuration/source_docu/bitbucket"},"next":{"title":"Destination","permalink":"/gickup-documentation/category/destination"}}');var s=o(4848),r=o(8453);const i={sidebar_position:7},c="Any",a={},u=[];function l(e){const n={code:"code",h1:"h1",header:"header",li:"li",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"any",children:"Any"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="config"',children:"source:\n  any:\n    - token: some-token\n      token_file: token.txt\n      url: url-to-any-repo \n      username: your-user \n      password: your-password\n      ssh: true \n      sshkey: /path/to/key\n    - url: can-also-be-a-local-path-to-a-bare-repo\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"token"}),": Token of the hoster. It can also be an environment variable."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"token_file"}),": alternatively, specify the token in a file, relative to current working directory when executed."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"url"}),": can be https, http or ssh. Could also be a local bare repository"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"username"}),": user that will be used for the clone process."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"password"}),": password for said user."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ssh"}),": boolean value if the clone should be done via ssh."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sshkey"}),": if empty, it uses your home directories' .ssh/id_rsa."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);